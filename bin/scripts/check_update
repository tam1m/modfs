#######################################################################################################
#                                                                                                     #
# even smaller JUIS update check to be used from "modfs", must be called on the device itself         #
#                                                                                                     #
# prerequisites:                                                                                      #
# - a BusyBox with mktemp (opt.), sed, base64, nc, dd, mknod                                          #
#                                                                                                     #
#######################################################################################################
#                                                                                                     #
# Copyright (C) 2010-2016 P.HÃ¤mmerlein (peterpawn@yourfritz.de)                                       #
#                                                                                                     #
# This program is free software; you can redistribute it and/or modify it under the terms of the GNU  #
# General Public License as published by the Free Software Foundation; either version 2 of the        # 
# License, or (at your option) any later version.                                                     #
#                                                                                                     #
# This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without   #
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU      #
# General Public License under http://www.gnu.org/licenses/gpl-2.0.html for more details.             #
#                                                                                                     #
#######################################################################################################
#                                                                                                     #
# calling:                                                                                            #
#                                                                                                     #
# check_update [-d|--debug] [-c|--current]                                                            #
#                                                                                                     #
# All box related settings will be read from the device, were're running on.                          #
#                                                                                                     #
# If '-c' is specified, the current version number will be decremented by one to search again for the #
# current version.                                                                                    #
#                                                                                                     #
# If an error occurs, an exit code of 2 will be returned. If no newer version was found, the exit     #
# code is set to 1 and only if a newer version was found, an exit code of 0 is used. In this case     #
# the URL, where the new version can be loaded from, is written to "stdout" prefixed with "URL=".     #
#                                                                                                     #
# If the optional "debug" option is present, the sent request and the received answer will be written #
# to STDERR.                                                                                          #
#                                                                                                     #
#######################################################################################################
#                                                                                                     #
# constants                                                                                           #
#                                                                                                     #
#######################################################################################################
settings="Serial Version Name HW OEM Lang Annex Country Public"
variables="Serial Major Minor Patch Build Name HW OEM Lang Annex Country Public"
hostbase="jws.avm.de"
juisport="80"
juisurl="/Jason/UpdateInfoService"
contenttype="text/xml; charset=\"utf-8\""
headerline_0="POST \$juisurl HTTP/1.0\\\r\\\n"
headerline_1="Host: \$hostname:\$juisport\\\r\\\n"
headerline_2="Content-Length: \$len\\\r\\\n"
headerline_3="Content-Type: \$contenttype\\\r\\\n"
headerline_4="Connection: close\\\r\\\n"
bodyline_0="\<soap:Envelope xmlns:soap=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\" xmlns:soap-enc=\\\"http://schemas.xmlsoap.org/soap/encoding/\\\" xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" xmlns:xsd=\\\"http://www.w3.org/2001/XMLSchema\\\" xmlns:e=\\\"http://juis.avm.de/updateinfo\\\" xmlns:q=\\\"http://juis.avm.de/request\\\"\>"
bodyline_1="\<soap:Header/\>\<soap:Body\>\<e:BoxFirmwareUpdateCheck\>\<e:RequestHeader\>\<q:Nonce\>\$nonce\</q:Nonce\>\<q:UserAgent\>Box\</q:UserAgent\>\<q:ManualRequest\>true\</q:ManualRequest\>\</e:RequestHeader\>\<e:BoxInfo\>"
bodyline_2="\<q:Name\>\$Name\</q:Name\>\<q:HW\>\$HW\</q:HW\>\<q:Major\>\$Major\</q:Major\>\<q:Minor\>\$Minor\</q:Minor\>\<q:Patch\>\$Patch\</q:Patch\>\<q:Buildnumber\>\$Build\</q:Buildnumber\>\<q:Buildtype\>\$type\</q:Buildtype\>\<q:Serial\>\$Serial\</q:Serial\>\<q:OEM\>\$OEM\</q:OEM\>\<q:Lang\>\$Lang\</q:Lang\>\<q:Country\>\$Country\</q:Country\>\<q:Annex\>\$Annex\</q:Annex\>\<q:Flag\>\</q:Flag\>\<q:UpdateConfig\>1\</q:UpdateConfig\>\<q:Provider\>oma_lan\</q:Provider\>\</e:BoxInfo\>\</e:BoxFirmwareUpdateCheck\>\</soap:Body\>\</soap:Envelope\>\\\n\\\n"
timeout=20
#######################################################################################################
#                                                                                                     #
# subfunctions                                                                                        #
#                                                                                                     #
#######################################################################################################
#                                                                                                     #
# make temporary directory or file, emulate 'mktemp' if it's missing                                  #
#                                                                                                     #
#######################################################################################################
mktmp()
{
	local name="$(mktemp $* 2>/dev/null)"
	if [ $? -eq 127 -o -z $name ]; then # mktemp is missing, emulation needed
		local dir tmp="$TMP"
		[ "$1" = "-d" ] && dir=1 || dir=0
		[ "$1" = "-p" ] && tmp="$2"
		[ -z "$tmp" ] && tmp="/var/tmp"
		name="$tmp/$(date +%s)_$$"
		name="${name}_$(dd if=/dev/urandom bs=8 count=1 2>/dev/null | base64 | sed -e "s|[^A-Za-z0-9]*||g")"
		if [ $dir -eq 1 ]; then
			[ -d "$name" ] && name="${name}_$(dd if=/dev/urandom bs=8 count=1 2>/dev/null | base64 | sed -e "s|[^A-Za-z0-9]*||g")"
			mkdir -p "$name" 2>/dev/null
		else
			touch $name 2>/dev/null
		fi
	fi
	printf "$name"
}
#######################################################################################################
#                                                                                                     #
# run 'nc' applet/command - if the server needs some time to answer, we've to use more sophisticated  #
# logic to detect a complete answer                                                                   #
#                                                                                                     #
#######################################################################################################
run_nc()
{
	local hostname="$1" port="$2" out="$3" pin="$(mktmp -p $td)" i=0 ncpid
	rm "$pin" 2>/dev/null
	mknod "$pin" p
	exec 6<>"$pin"
	nc $hostname $port >"$out" <"$pin" &
	ncpid=$!
	cat - 1>&6
	while ! grep -q "/soap:Envelope" "$out" 2>/dev/null; do
		i=$(( i + 1 ))
		[ $i -gt $timeout ] && break
		sleep 1
	done
	exec 6>&-
	[ -d /proc/$ncpid ] && kill $ncpid
	rm "$pin" 2>/dev/null
}
#######################################################################################################
#                                                                                                     #
# extract result variables from JUIS answer                                                           #
#                                                                                                     #
#######################################################################################################
extract_xml()
{
	local input="$1" ns="$2" tag="$3"
	sed -n -e "s|.*<$ns:$tag>\(.*\)</$ns:$tag>.*|\1|p" $input
}
#######################################################################################################
#                                                                                                     #
# extract box variable from xml structure                                                             #
#                                                                                                     #
#######################################################################################################
jason_boxinfo()
{
	extract_xml /var/jason_boxinfo.xml "j" "$1"
}
#######################################################################################################
#                                                                                                     #
# check debug option                                                                                  #
#                                                                                                     #
#######################################################################################################
if [ x"$1" == x"-d" -o x"$1" == x"--debug" ]; then
	debug=1
	shift
else
	debug=0
fi
#######################################################################################################
#                                                                                                     #
# check other options                                                                                 #
#                                                                                                     #
#######################################################################################################
if [ x"$1" == x"-c" -o x"$1" == x"--current" ]; then
	current=1
	shift
else
	current=0
fi
#######################################################################################################
#                                                                                                     #
# prepare temporary directory and cleanup on exit                                                     #
#                                                                                                     #
#######################################################################################################
td="$(mktmp -d)"
trap 'rm -rf "$td" 2>/dev/null' EXIT INT HUP
#######################################################################################################
#                                                                                                     #
# check and set parameters                                                                            #
#                                                                                                     #
#######################################################################################################
for n in $settings; do
	val="$(jason_boxinfo $n)"
 	eval $n='$val'	
	if [ $n == Version ]; then
		Major="${Version%%.*}"
		Minor="${Version#*.}"
		Patch="${Minor#*.}"
		Build="${Patch#*-}"
		[ x"$Build" == x"$Patch" ] && Build="" || Patch="${Patch%%-*}"
		Minor=$(( ${Minor%%.*} - current ))
		[ -z "$Build" ] && Build="$(jason_boxinfo Revision)"
	fi
done
#######################################################################################################
#                                                                                                     #
# prepare additional variables                                                                        #
#                                                                                                     #
#######################################################################################################
type="1001"
hostname=$HW.$hostbase
nonce=$(dd if=/dev/urandom bs=16 count=1 2>/dev/null | base64)
#######################################################################################################
#                                                                                                     #
# show debug info regarding final variable content                                                    #
#                                                                                                     #
#######################################################################################################
if [ $debug -eq 1 ]; then
	printf "===================================\nVariables set:\n" 1>&2
	for n in $variables type hostname nonce; do
		printf "%s=\"%s\"\n" $n "$(eval echo \$$n)" 1>&2
	done
	printf "\n" 1>&2
fi
#######################################################################################################
#                                                                                                     #
# prepare temporary files for the check request                                                       #
#                                                                                                     #
#######################################################################################################
body="$(mktmp -p $td)"
header="$(mktmp -p $td)"
response="$(mktmp -p $td)"
eval echo -ne "$bodyline_0" >>"$body"
eval echo -ne "$bodyline_1" >>"$body"
eval echo -ne "$bodyline_2" >>"$body"
len=$(stat -c %s "$body")
eval echo -ne "$headerline_0" >>"$header"
eval echo -ne "$headerline_1" >>"$header"
eval echo -ne "$headerline_2" >>"$header"
eval echo -ne "$headerline_3" >>"$header"
eval echo -ne "$headerline_4" >>"$header"
if [ $debug -eq 1 ]; then
	printf "===================================\nSent request:\n" 1>&2
	cat "$header" 1>&2
	printf "\r\n" 1>&2
	cat "$body" 1>&2
	printf "\n" 1>&2
fi
#######################################################################################################
#                                                                                                     #
# execute SOAP request                                                                                #
#                                                                                                     #
#######################################################################################################
(cat "$header"; printf "\r\n"; cat "$body" ) | run_nc $hostname $juisport "$response"
if [ $debug -eq 1 ]; then
	printf "===================================\nReceived response:\n" 1>&2
	cat $response 1>&2
	printf "\n" 1>&2
	printf "======= end of debug output =======\n" 1>&2
fi
#######################################################################################################
#                                                                                                     #
# examine the status code                                                                             #
#                                                                                                     #
#######################################################################################################
status="$(sed -n -e "1p" "$response" | sed -n -e "s|HTTP/1.1 \([0-9]*\) OK.*|\1|p")"
if [ -z "$status" ]; then
	echo "Unexpected data received from network." 1>&2
	exit 2
elif [ x"$status" != x"200" ]; then
	echo "Unexpected error code $status returned from jws.avm.de." 1>&2
	exit 2
fi
#######################################################################################################
#                                                                                                     #
# examine the response and show the result                                                            #
#                                                                                                     #
#######################################################################################################
xmlresp="$(mktmp -p $td)"
sed -n -e "\$p" "$response" >"$xmlresp"
found="$(extract_xml "$xmlresp" "ns3" "Found")"
[ x"$found" != x"true" ] && exit 1
URL="$(extract_xml "$xmlresp" "ns3" "DownloadURL")"
Version="$(extract_xml "$xmlresp" "ns3" "Version")"
echo "NewVersion=$Version"
echo "DownloadURL=$URL"
#######################################################################################################
#                                                                                                     #
# end of script                                                                                       #
#                                                                                                     #
#######################################################################################################
exit 0
