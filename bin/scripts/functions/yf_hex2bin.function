#! /bin/true
# vi: set tabstop=4 syntax=sh : # colorize it in 'vi' and use shorter tabstops
#######################################################################################
#                                                                                     #
# hex2bin - convert hexadecimal string to binary data                                 #
#                                                                                     #
# parameters:                                                                         #
#   $1 - input value representing a hexadecimal string                                #
#                                                                                     #
# stdout:                                                                             #
#   input value converted to binary content                                           #
#                                                                                     #
# return code:                                                                        #
#   0 - stdout content is valid                                                       #
#   1 - error occured (e.g. input format is invalid)                                  #
#                                                                                     #
#######################################################################################
yf_hex2bin()
(
	val="$1"
	zeroes=0
	yf_is_hexadecimal "$val" || return 1
	[ $(( ${#val} % 2 )) -ne 0 ] && return 1
	while [ ${#val} -gt 0 ]; do
		dec=$(yf_substring "$val" 0 2)
		val="$(yf_substring "$val" 2)"
		[ $dec = 00 ] && zeroes=$(( zeroes + 1 )) && continue
		[ $zeroes -gt 0 ] && dd if=/dev/zero bs=1 count=$zeroes 2>/dev/null && zeroes=0
		dec=$(yf_hex2dec $dec)
		printf "%b" "\0$(( dec >> 6 ))$(( ( dec >> 3 ) & 7 ))$(( dec & 7 ))"
	done
	[ $zeroes -gt 0 ] && dd if=/dev/zero bs=1 count=$zeroes 2>/dev/null 
	return 0
)
